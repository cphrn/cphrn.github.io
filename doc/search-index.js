var searchIndex = {};
searchIndex["monocypher"] = {"doc":"Monocypher is a cryptographic library.","items":[[0,"blake2b","monocypher","Blake2b hash function",null,null],[3,"Context","monocypher::blake2b","",null,null],[5,"easy","","Simple function to hash the input data.",null,null],[5,"general","","Function to hash the input data with an additional key.",null,null],[11,"new","","",0,null],[11,"update","","",0,null],[11,"finalize","","",0,null],[0,"lock","monocypher","Authenticated encryption w/o additional data",null,null],[3,"Context","monocypher::lock","",null,null],[5,"easy","","Encrypt and authenticate plaintext data.",null,null],[5,"aead","","Encrypt and authenticate plaintext with additional data.",null,null],[11,"new","","",1,null],[11,"auth_ad","","",1,null],[11,"auth_message","","",1,null],[11,"update","","",1,null],[11,"finalize","","",1,null],[0,"unlock","monocypher","Authenticated decryption w/o additional data",null,null],[3,"Context","monocypher::unlock","",null,null],[5,"easy","","Decrypt encrypted data.",null,null],[5,"aead","","Decrypt ciphertext with additional data.",null,null],[11,"new","","",2,null],[11,"auth_ad","","",2,null],[11,"auth_message","","",2,null],[11,"update","","",2,null],[11,"finalize","","",2,null],[0,"sign","monocypher","Incremental public key signatures",null,null],[3,"Context","monocypher::sign","",null,null],[5,"public_key","","",null,null],[5,"sign","","",null,null],[5,"check","","",null,null],[11,"new","","",3,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"context"}}],[11,"update","","",3,null],[11,"finalize","","",3,null],[11,"begin_second_pass","","",3,{"inputs":[{"name":"self"}],"output":null}],[0,"check","monocypher","Public key signature functions",null,null],[3,"Context","monocypher::check","",null,null],[11,"new","","",4,null],[11,"update","","",4,null],[11,"finalize","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"result"}}],[0,"utils","monocypher","Util functions for constant time comparison and memory wiping.",null,null],[5,"verify","monocypher::utils","Constant time comparison of two equal sized buffers.",null,null],[5,"wipe","","Clears a memory region.",null,null],[0,"argon2i","monocypher","Argon2i key derivation function",null,null],[5,"easy","monocypher::argon2i","Simple function to derive a key from a password.",null,null],[5,"general","","Function to derive a key from a password with additional data.",null,null],[0,"poly1305","monocypher","Poly1305 one-time message authentication codes.",null,null],[3,"Context","monocypher::poly1305","",null,null],[5,"auth","","Produces a message authentication code for the given message and authentication key.",null,null],[11,"new","","",5,null],[11,"update","","",5,null],[11,"finalize","","",5,null],[0,"key_exchange","monocypher","Elliptic Curve Diffie-Hellman key exchange",null,null],[5,"shared","monocypher::key_exchange","Computes a shared key with your secret key and their public key.",null,null],[5,"public","","Deterministically computes the public key from a random secret key.",null,null],[0,"chacha20","monocypher","Chacha20 encryption functions.",null,null],[3,"Context","monocypher::chacha20","",null,null],[5,"easy","","Simple encryption function.",null,null],[11,"new","","",6,null],[11,"new_x","","",6,null],[11,"encrypt","","",6,null],[11,"stream","","",6,null],[11,"chacha20_set_ctr","","",6,{"inputs":[{"name":"self"},{"name":"u64"}],"output":null}]],"paths":[[3,"Context"],[3,"Context"],[3,"Context"],[3,"Context"],[3,"Context"],[3,"Context"],[3,"Context"]]};
initSearch(searchIndex);
